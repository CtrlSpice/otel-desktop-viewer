name: Release

on:
  push:
    tags:
      - 'v*'
  pull_request:
  workflow_dispatch:
    inputs:
      test_mode:
        description: 'Run in test mode (no notifications)'
        required: true
        default: true
        type: boolean

permissions:
  contents: write
  id-token: write
  packages: write
  actions: write

jobs:
  prepare:
    strategy:
      matrix:
        include:
          - os: macos-latest
            build_id: macos_amd64
            goos: darwin
            goarch: amd64
          - os: macos-latest
            build_id: macos_arm64
            goos: darwin
            goarch: arm64
          - os: ubuntu-latest
            build_id: linux_x86_64
            goos: linux
            goarch: amd64
          - os: ubuntu-24.04-arm
            build_id: linux_arm64
            goos: linux
            goarch: arm64
          - os: windows-latest
            build_id: windows_amd64
            goos: windows
            goarch: amd64
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'
          cache-dependency-path: |
            go.sum
            desktopexporter/go.sum

      - name: Sync Go workspace
        run: go work sync

      - name: Debug cache keys
        run: |
          echo "GitHub SHA: ${{ github.sha }}"
          echo "Matrix OS: ${{ matrix.goos }}"
          echo "Matrix Arch: ${{ matrix.goarch }}"
          echo "Matrix Build ID: ${{ matrix.build_id }}"
          echo "Expected cache keys:"
          echo "  linux: linux-${{ github.sha }}"
          echo "  linux-arm: linux-arm-${{ github.sha }}"
          echo "  darwin: darwin-${{ github.sha }}"
          echo "  darwin-arm: darwin-arm-${{ github.sha }}"
          echo "  windows: windows-${{ github.sha }}"

      - name: Cache build artifacts
        uses: actions/cache@v4
        with:
          path: dist/linux
          key: linux-${{ github.sha }}
        if: matrix.goos == 'linux' && matrix.goarch == 'amd64'

      - name: Cache build artifacts
        uses: actions/cache@v4
        with:
          path: dist/linux
          key: linux-arm-${{ github.sha }}
        if: matrix.goos == 'linux' && matrix.goarch == 'arm64'

      - name: Cache build artifacts
        uses: actions/cache@v4
        with:
          path: dist/darwin
          key: darwin-${{ github.sha }}
          enableCrossOsArchive: true
        if: matrix.goos == 'darwin' && matrix.goarch == 'amd64'

      - name: Cache build artifacts
        uses: actions/cache@v4
        with:
          path: dist/darwin
          key: darwin-arm-${{ github.sha }}
          enableCrossOsArchive: true
        if: matrix.goos == 'darwin' && matrix.goarch == 'arm64'

      - name: Cache build artifacts
        uses: actions/cache@v4
        with:
          path: dist/windows
          key: windows-${{ github.sha }}
          enableCrossOsArchive: true
        if: matrix.goos == 'windows' && matrix.goarch == 'amd64'

      - name: Set up MSYS2 (Windows)
        if: matrix.os == 'windows-latest'
        uses: msys2/setup-msys2@v2
        with:
          msystem: UCRT64
          update: true
          install: >-
            mingw-w64-ucrt-x86_64-gcc
            mingw-w64-ucrt-x86_64-toolchain

      - name: Add MSYS2 to PATH (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          echo "C:\msys64\ucrt64\bin" >> $env:GITHUB_PATH

      - name: Set up Docker Buildx
        if: matrix.goos == 'linux'
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        if: matrix.goos == 'linux'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.CR_PAT }}

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser-pro
          version: v2.9.0
          # The --id flag ensures each runner only builds for supported architecture.
          # Without it, GoReleaser would try to build for all architectures on each runner, which would
          # cause cross-compilation issues, especially for CGO-enabled builds.
          args: release --clean --split ${{ github.event_name == 'workflow_dispatch' && '--snapshot' || '' }} --id ${{ matrix.build_id }}
        env:
          # GitHub Personal Access Token for repository access
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
          # GoReleaser Pro license key for module publishing
          GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}
          # Container Registry PAT for Docker image publishing
          CR_PAT: ${{ secrets.CR_PAT }}
          # Enable CGO for DuckDB bindings
          CGO_ENABLED: 1

  release:
    needs: prepare
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.CR_PAT }}

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'
          cache-dependency-path: |
            go.sum
            desktopexporter/go.sum

      - name: Debug cache keys and available artifacts
        run: |
          echo "GitHub SHA: ${{ github.sha }}"
          echo "Expected cache keys:"
          echo "  linux: linux-${{ github.sha }}"
          echo "  linux-arm: linux-arm-${{ github.sha }}"
          echo "  darwin: darwin-${{ github.sha }}"
          echo "  darwin-arm: darwin-arm-${{ github.sha }}"
          echo "  windows: windows-${{ github.sha }}"
          echo ""
          echo "Checking if dist directories exist:"
          ls -la dist/ || echo "dist/ directory does not exist"
          ls -la dist/linux/ || echo "dist/linux/ directory does not exist"
          ls -la dist/darwin/ || echo "dist/darwin/ directory does not exist"
          ls -la dist/windows/ || echo "dist/windows/ directory does not exist"

      - name: Cache build artifacts
        uses: actions/cache@v4
        with:
          path: dist/linux
          key: linux-${{ github.sha }}

      - name: Cache build artifacts
        uses: actions/cache@v4
        with:
          path: dist/linux
          key: linux-arm-${{ github.sha }}

      - name: Cache build artifacts
        uses: actions/cache@v4
        with:
          path: dist/darwin
          key: darwin-${{ github.sha }}
          enableCrossOsArchive: true

      - name: Cache build artifacts
        uses: actions/cache@v4
        with:
          path: dist/darwin
          key: darwin-arm-${{ github.sha }}
          enableCrossOsArchive: true

      - name: Cache build artifacts
        uses: actions/cache@v4
        with:
          path: dist/windows
          key: windows-${{ github.sha }}
          enableCrossOsArchive: true

      - name: Complete release
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser-pro
          version: v2.9.0
          args: continue --merge
        env:
          # GitHub Personal Access Token for repository access
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
          # GoReleaser Pro license key for module publishing
          GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}
          # Container Registry PAT for Docker image publishing
          CR_PAT: ${{ secrets.CR_PAT }}