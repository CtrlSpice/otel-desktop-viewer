name: Release

on: push
  # pull_request:
  # push:
  #   tags:
  #     - 'v*'

permissions:
  contents: write
  id-token: write
  packages: write
  actions: write

jobs:
  prepare:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Cache build artifacts
        uses: actions/cache@v4
        with:
          path: dist/linux
          key: linux-${{ github.sha }}
        if: matrix.os == 'ubuntu-latest'

      - name: Cache build artifacts
        uses: actions/cache@v4
        with:
          path: dist/darwin
          key: darwin-${{ github.sha }}
        if: matrix.os == 'macos-latest'

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser-pro
          version: latest
          args: release --clean --split --snapshot
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
          GORELEASER_KEY: ${{ secrets.GH_PAT }}
          CGO_ENABLED: 1

  release:
    needs: prepare
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Cache build artifacts
        uses: actions/cache@v4
        with:
          path: dist/linux
          key: linux-${{ github.sha }}

      - name: Cache build artifacts
        uses: actions/cache@v4
        with:
          path: dist/darwin
          key: darwin-${{ github.sha }}

      - name: Complete release
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser-pro
          version: latest
          args: continue --merge --snapshot
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}

