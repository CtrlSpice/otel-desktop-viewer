
name: Release
on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      test_mode:
        description: 'Run in test mode (no notifications)'
        required: true
        default: true
        type: boolean
permissions:
  contents: write
  id-token: write
  packages: write
  actions: write
jobs:
  prepare:
    strategy:
      matrix:
        include:
          - os: macos-latest
            build_id: macos_amd64
            goos: darwin
            goarch: amd64
          - os: macos-latest
            build_id: macos_arm64
            goos: darwin
            goarch: arm64
          - os: ubuntu-latest
            build_id: linux_amd64
            goos: linux
            goarch: amd64
          - os: ubuntu-24.04-arm
            build_id: linux_arm64
            goos: linux
            goarch: arm64
          - os: windows-latest
            build_id: windows_amd64
            goos: windows
            goarch: amd64
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'
          cache-dependency-path: |
            go.sum
            desktopexporter/go.sum
      - name: Sync Go workspace
        run: go work sync
      - name: Set up MSYS2 (Windows)
        if: matrix.os == 'windows-latest'
        uses: msys2/setup-msys2@v2
        with:
          msystem: UCRT64
          update: true
          install: >-
            mingw-w64-ucrt-x86_64-gcc
            mingw-w64-ucrt-x86_64-toolchain
      - name: Add MSYS2 to PATH (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          echo "C:\msys64\ucrt64\bin" >> $env:GITHUB_PATH
      - name: Run GoReleaser
        id: goreleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser-pro
          version: v2.11.2
          # Use GGOOS/GGOARCH to filter targets with partial.by: target
          args: release --clean --split ${{ github.event_name == 'workflow_dispatch' && '--snapshot' || '' }}
        env:
          # GitHub Personal Access Token for repository access
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
          # GoReleaser Pro license key for module publishing
          GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}
          # Container Registry PAT for Docker image publishing
          CR_PAT: ${{ secrets.CR_PAT }}
          # Enable CGO for DuckDB bindings
          CGO_ENABLED: 1
          # Filter targets by OS and architecture
          GGOOS: ${{ matrix.goos }}
          GGOARCH: ${{ matrix.goarch }}
      - name: Cache GoReleaser contexts
        uses: actions/cache@v4
        with:
          path: dist/${{ matrix.goos }}_${{ matrix.goarch }}
          key: ${{ matrix.goos }}-${{ matrix.goarch }}-${{ github.sha }}
          enableCrossOsArchive: ${{ matrix.os == 'windows-latest' }}



  release:
    needs: prepare
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'
          cache-dependency-path: |
            go.sum
            desktopexporter/go.sum
      - name: Restore GoReleaser build artifacts (darwin-amd64)
        uses: actions/cache@v4
        with:
          path: dist/darwin_amd64
          key: darwin-amd64-${{ github.sha }}
      - name: Restore GoReleaser build artifacts (darwin-arm64)
        uses: actions/cache@v4
        with:
          path: dist/darwin_arm64
          key: darwin-arm64-${{ github.sha }}
      - name: Restore GoReleaser build artifacts (linux-amd64)
        uses: actions/cache@v4
        with:
          path: dist/linux_amd64
          key: linux-amd64-${{ github.sha }}
      - name: Restore GoReleaser build artifacts (linux-arm64)
        uses: actions/cache@v4
        with:
          path: dist/linux_arm64
          key: linux-arm64-${{ github.sha }}
      - name: Restore GoReleaser build artifacts (windows-amd64)
        uses: actions/cache@v4
        with:
          path: dist/windows_amd64
          key: windows-amd64-${{ github.sha }}
          enableCrossOsArchive: true
      - name: Complete release
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser-pro
          version: v2.11.2
          args: continue --merge
        env:
          # GitHub Personal Access Token for repository access
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
          # GoReleaser Pro license key for module publishing
          GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}
          # Container Registry PAT for Docker image publishing
          CR_PAT: ${{ secrets.CR_PAT }}
