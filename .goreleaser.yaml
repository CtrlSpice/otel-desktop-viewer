version: 2

partial:
  by: target

env:
  - CGO_ENABLED=1

before:
  hooks:
    - cmd: go work sync
    - cmd: sh -c "go mod tidy && cd desktopexporter && go mod tidy"

builds:
  - id: macos_amd64
    binary: otel-desktop-viewer
    goos: 
      - darwin
    goarch:
      - amd64
    # Sets binary timestamp to commit time for reproducible builds
    mod_timestamp: "{{ .CommitTimestamp }}"
    # Removes file paths from binary for security and portability
    flags:
      - -trimpath
    # -s -w: strips debug info
    # -X: injects version, commit, and date into binary
    ldflags:
      - -s -w -X main.version={{.Version}} -X main.commit={{.Commit}} -X main.date={{ .CommitDate }}

  - id: macos_arm64
    binary: otel-desktop-viewer
    goos: 
      - darwin
    goarch:
      - arm64
    mod_timestamp: "{{ .CommitTimestamp }}"
    flags:
      - -trimpath
    ldflags:
      - -s -w -X main.version={{.Version}} -X main.commit={{.Commit}} -X main.date={{ .CommitDate }}

  - id: linux_amd64
    binary: otel-desktop-viewer
    goos:
      - linux
    goarch:
      - amd64
    mod_timestamp: "{{ .CommitTimestamp }}"
    flags:
      - -trimpath
    ldflags:
      - -s -w -X main.version={{.Version}} -X main.commit={{.Commit}} -X main.date={{ .CommitDate }}

  - id: linux_arm64
    binary: otel-desktop-viewer
    goos:
      - linux
    goarch:
      - arm64
    mod_timestamp: "{{ .CommitTimestamp }}"
    flags:
      - -trimpath
    ldflags:
      - -s -w -X main.version={{.Version}} -X main.commit={{.Commit}} -X main.date={{ .CommitDate }}

  - id: windows_amd64
    binary: otel-desktop-viewer
    goos:
      - windows
    goarch:
      - amd64
    mod_timestamp: "{{ .CommitTimestamp }}"
    flags:
      - -trimpath
    ldflags:
      - -s -w -X main.version={{.Version}} -X main.commit={{.Commit}} -X main.date={{ .CommitDate }}

archives:
  # Main archive with all platforms
  - id: otel-desktop-viewer-archive
    ids:
      - macos_amd64
      - macos_arm64
      - linux_amd64
      - linux_arm64
      - windows_amd64
    formats: 
      - tar.gz
    format_overrides:
      - goos: windows
        formats: ['zip']
    name_template: "{{ .ProjectName }}_{{ .Os }}_{{ .Arch }}"
  
  # Separate archive for Homebrew (macOS and Linux)
  - id: homebrew-archive
    ids:
      - macos_amd64
      - macos_arm64
      - linux_amd64
      - linux_arm64
    formats: 
      - tar.gz
    name_template: "{{ .ProjectName }}_homebrew_{{ .Os }}_{{ .Arch }}"

checksum:
  name_template: "checksums.txt"

changelog:
  sort: asc
  filters:
    exclude:
      - "^docs:"
      - "^test:"

release:
  name_template: "v{{ .Version }}"
  footer: >-
    ---
    Released by [CtrlSpice](https://github.com/CtrlSpice) using [GoReleaser](https://github.com/goreleaser/goreleaser).

homebrew_casks:
  - name: otel-desktop-viewer
    ids:
      - homebrew-archive
    repository:
      owner: CtrlSpice
      name: homebrew-otel-desktop-viewer
    directory: .
    description: "otel-desktop-viewer is a CLI tool for receiving OpenTelemetry traces while working on your local machine. Logs and metrics coming soon!"
    homepage: "https://github.com/CtrlSpice/otel-desktop-viewer"
    license: "Apache-2.0"
    caveats: |
      To start the viewer, run:
        otel-desktop-viewer


