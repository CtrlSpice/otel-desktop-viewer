version: 2

env:
  - CGO_ENABLED=1

before:
  hooks:
    - cmd: go work sync
    - cmd: sh -c "go mod tidy && cd desktopexporter && go mod tidy"



builds:
  # - id: macos_amd64
  #   binary: otel-desktop-viewer
  #   goos: 
  #     - darwin
  #   goarch:
  #     - amd64
  #   # Sets binary timestamp to commit time for reproducible builds
  #   mod_timestamp: "{{ .CommitTimestamp }}"
  #   # Removes file paths from binary for security and portability
  #   flags:
  #     - -trimpath
  #   # -s -w: strips debug info
  #   # -X: injects version, commit, and date into binary
  #   ldflags:
  #     - -s -w -X main.version={{.Version}} -X main.commit={{.Commit}} -X main.date={{ .CommitDate }}

  # - id: macos_arm64
  #   binary: otel-desktop-viewer
  #   goos: 
  #     - darwin
  #   goarch:
  #     - arm64
  #   mod_timestamp: "{{ .CommitTimestamp }}"
  #   flags:
  #     - -trimpath
  #   ldflags:
  #     - -s -w -X main.version={{.Version}} -X main.commit={{.Commit}} -X main.date={{ .CommitDate }}

  - id: linux_x86_64
    binary: otel-desktop-viewer
    goos:
      - linux
    goarch:
      - amd64
    mod_timestamp: "{{ .CommitTimestamp }}"
    flags:
      - -trimpath
    ldflags:
      - -s -w -X main.version={{.Version}} -X main.commit={{.Commit}} -X main.date={{ .CommitDate }}

  - id: linux_arm64
    binary: otel-desktop-viewer
    goos:
      - linux
    goarch:
      - arm64
    mod_timestamp: "{{ .CommitTimestamp }}"
    flags:
      - -trimpath
    ldflags:
      - -s -w -X main.version={{.Version}} -X main.commit={{.Commit}} -X main.date={{ .CommitDate }}

  # - id: windows_amd64
  #   binary: otel-desktop-viewer
  #   goos:
  #     - windows
  #   goarch:
  #     - amd64
  #   mod_timestamp: "{{ .CommitTimestamp }}"
  #   flags:
  #     - -trimpath
  #   ldflags:
  #     - -s -w -X main.version={{.Version}} -X main.commit={{.Commit}} -X main.date={{ .CommitDate }}

archives:
  # Main archive with all platforms
  - id: otel-desktop-viewer-archive
    ids:
      - macos_amd64
      - macos_arm64
      - linux_x86_64
      - linux_arm64
      - windows_amd64
    formats: 
      - tar.gz
    format_overrides:
      - goos: windows
        formats: ['zip']
    name_template: >-
      {{ .ProjectName }}_
      {{- if eq .Os "darwin" }}MacOS
      {{- else }}{{ title .Os }}{{ end }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else }}{{ .Arch }}{{ end }}
  
  # Separate archive for Homebrew (macOS and Linux)
  - id: homebrew-archive
    ids:
      - macos_amd64
      - macos_arm64
      - linux_x86_64
      - linux_arm64
    formats: 
      - tar.gz
    name_template: >-
      {{ .ProjectName }}_homebrew_
      {{- if eq .Os "darwin" }}MacOS
      {{- else }}{{ title .Os }}{{ end }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else }}{{ .Arch }}{{ end }}

checksum:
  name_template: "checksums.txt"

changelog:
  sort: asc
  filters:
    exclude:
      - "^docs:"
      - "^test:"

release:
  name_template: "v{{ .Version }}"
  footer: >-
    ---
    Released by [GoReleaser](https://github.com/goreleaser/goreleas
    er).

# Docker images
dockers:
  - image_templates:
      - "ghcr.io/ctrlspice/otel-desktop-viewer:{{ .Version }}-linux-amd64"
      - "ghcr.io/ctrlspice/otel-desktop-viewer:latest-linux-amd64"
    dockerfile: Dockerfile
    use: buildx
    build_flag_templates:
      - "--platform=linux/amd64"
      - "--build-arg=VERSION={{ .Version }}"
      - "--build-arg=COMMIT={{ .Commit }}"
      - "--build-arg=DATE={{ .CommitDate }}"
    extra_files:
      - Dockerfile
    ids:
      - linux_x86_64

  - image_templates:
      - "ghcr.io/ctrlspice/otel-desktop-viewer:{{ .Version }}-linux-arm64"
      - "ghcr.io/ctrlspice/otel-desktop-viewer:latest-linux-arm64"
    dockerfile: Dockerfile
    use: buildx
    build_flag_templates:
      - "--platform=linux/arm64"
      - "--build-arg=VERSION={{ .Version }}"
      - "--build-arg=COMMIT={{ .Commit }}"
      - "--build-arg=DATE={{ .CommitDate }}"
    extra_files:
      - Dockerfile
    ids:
      - linux_arm64

brews:
  - name: otel-desktop-viewer
    ids:
      - homebrew-archive
    # GitHub repository where the formula will be published
    repository:
      owner: CtrlSpice
      name: homebrew-otel-desktop-viewer
    # Homebrew formula name
    directory: .
    # Homebrew formula description
    description: "OpenTelemetry Desktop Viewer"
    # Homebrew formula homepage
    homepage: "https://github.com/CtrlSpice/otel-desktop-viewer"
    # Homebrew formula license
    license: "Apache-2.0"
    # Homebrew formula dependencies
    dependencies:
      - go
    # Homebrew formula test
    test: |
      system "#{bin}/otel-desktop-viewer", "--version"
    # Homebrew formula caveats
    caveats: |
      To start the viewer, run:
        otel-desktop-viewer
